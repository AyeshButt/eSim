@model string

@{
    ViewBag.Title = "Esim Details";
    var iccid = Model;
}

@* <div id="loader" style="display:none;" class="spinner-border text-danger" role="status">
    <span class="sr-only">Loading...</span>
</div>
<!-- Tabs -->
<ul class="nav nav-tabs" id="myTabs">
    <li class="nav-item">
        <a class="nav-link active" data-url="/Esim/EsimDetails" href="#tab1">Sim Data</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" data-url="/Esim/PartialView1" href="#tab2">Applied Bundles</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" data-url="/Esim/EsimHistory" href="#tab3">History</a>
    </li>
</ul>

<!-- Tab content area -->
<div id="tab-content" class="mt-3">
    <!-- Loaded partial view goes here -->
</div>

@section Scripts {
    <script>
            var iccid = '@Model';

        $(document).ready(function () {
            // Load default tab content
            loadPartial($('.nav-link.active').data('url'));

            // Handle tab click
            $('.nav-link').on('click', function (e) {
                e.preventDefault();
                $('.nav-link').removeClass('active');           
                $(this).addClass('active');

                const url = $(this).data('url');
                loadPartial(url);
            });

            function loadPartial(url) {
                $('#loader').show(); // Show loader
                $('#tab-content').empty(); // Clear content area

                $.ajax({
                    url: url,
                    data: { iccid: iccid }, // passing string here
                    type: 'GET',
                    success: function (data) {
                        $('#tab-content').html(data);

                         // ✅ Bind fetch button after partial is loaded
            const fetchBtn = document.getElementById("fetchBtn");
            const iccid = fetchBtn?.getAttribute("data-iccid");
            if (fetchBtn && iccid) {
                fetchBtn.addEventListener("click", function (e) {
                    e.preventDefault();

                    fetch(`https://localhost:7264/esims/${iccid}/qr`)
                .then(response => {
                    if (!response.ok) throw new Error("Failed to fetch file");
                    const contentDisposition = response.headers.get("Content-Disposition");
                    const filename = contentDisposition
                        ? contentDisposition.split("filename=")[1]?.replace(/"/g, '') || 'download.png'
                        : `qr_${iccid}.png`;
                    return response.blob().then(blob => ({ blob, filename }));
                })
                .then(({ blob, filename }) => {
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement("a");
                    a.href = url;
                    a.download = filename;
                    document.body.appendChild(a);
                    a.click();
                    a.remove();
                    window.URL.revokeObjectURL(url);
                })
                .catch(err => {
                    alert("Download failed: " + err.message);
                })
                        .catch(err => {
                            document.getElementById("api-result").innerHTML =
                                `<div class="text-danger">Error: ${err.message}</div>`;
                        });
                });
            }

                    },
                    error: function () {
                        $('#tab-content').html('<div class="alert alert-danger">Error loading content.</div>');
                    },
                    complete: function () {
                        $('#loader').hide(); // Hide loader
                    }
                });
            }
        });
    </script>
}
 *@


<!-- Tabs -->
<ul class="nav nav-tabs" id="detailsTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" data-tab="detail" type="button">Detail</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" data-tab="appliedBundle" type="button">Applied Bundles</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" data-tab="history" type="button">History</button>
    </li>
</ul>

<!-- Tab Content -->
<div class="tab-content border p-3" id="tabContent">
    <div id="tabLoader" class="text-center my-5" style="display: none;">
        <div class="spinner-border text-primary" role="status"></div>
        <div class="mt-2">Loading...</div>
    </div>
    <div id="tabPane"></div>
</div>

@section Scripts {
    <script>
        let currentTabRequest = null;
        var iccid = '@iccid';

        function loadTab(tabName) {
            $('#tabPane').empty();
            $('#tabLoader').show();

            // Abort previous request if still pending
            if (currentTabRequest && currentTabRequest.readyState !== 4) {
                currentTabRequest.abort();
            }

            currentTabRequest = $.ajax({
            url: '@Url.Action("LoadEsimPartialViews", "Esim")',
            type: 'POST',
            data: { tab: tabName,iccid: iccid},
                success: function (html) {
                    $('#tabLoader').hide();
                    $('#tabPane').html(html);
                },
                error: function (xhr, status) {
                    if (status !== 'abort') {
                        $('#tabLoader').hide();
                        $('#tabPane').html('<div class="text-danger text-center">Failed to load tab.</div>');
                    }
                }
            });
        }

        $(document).ready(function () {
            // Initial load
            loadTab('detail');

            // On tab click
            $('#detailsTabs button').click(function () {
                $('#detailsTabs .nav-link').removeClass('active');
                $(this).addClass('active');

                const tab = $(this).data('tab');
                loadTab(tab);
            });
        });
    </script>
}
