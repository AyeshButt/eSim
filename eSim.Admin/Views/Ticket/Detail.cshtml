@model eSim.Infrastructure.DTOs.Ticket.TicketDTO

@{
    ViewBag.Title = "Ticket Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h2 class="mb-4">Ticket Details</h2>

    @if (ViewBag.Error != null)
    {
        <div class="alert alert-danger text-center alert-dismissible fade show" role="alert">
            <strong>@ViewBag.Error</strong>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    else if (Model != null)
    {
       
        <div class="card mb-4">
            <div class="card-header">
                <strong>Ticket Info</strong>
            </div>
            <div class="card-body">
                <table class="table table-bordered">
                    <tr>
                        <th>TRN</th>
                        <td>@Model.TRN</td>
                    </tr>
                    <tr>
                        <th>Subject</th>
                        <td>@Model.Subject</td>
                    </tr>
                    <tr>
                        <th>Type</th>
                        <td>@(Model.TicketType == 1 ? "Bundle" : "Payment")</td>
                    </tr>
                    <tr>
                        <th>Status</th>
                        <td>@(Model.Status == 0 ? "Completed" : "Working On")</td>
                    </tr>
                    <tr>
                        <th>Created At</th>
                        <td>@Model.CreatedAt.ToString("dd MMM yyyy - hh:mm tt")</td>
                    </tr>
                </table>
            </div>
        </div>
           <div class="col-xxl-9">
                            <div class="card">
        <div class="card mb-4">
            <div class="card-header">
                <strong>Description</strong>
            </div>
            <div class="card-body">
                <p class="text-muted">@Model.Description</p>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <strong>Comments</strong>
            </div>
            <div class="card-body">
                @if (Model.Comments != null && Model.Comments.Any())
                {
                    foreach (var comment in Model.Comments)
                    {
                        <div class="border p-3 mb-3 rounded">
                            <strong>@comment.ActivityBy</strong>
                            <span class="text-muted small">(@comment.ActivityAt.ToString("dd MMM yyyy - hh:mm tt"))</span>
                            <p class="mt-2">@comment.Comment</p>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted">No comments available for this ticket.</p>
                }
            </div>
        </div>
            </div><!--end card-->
        </div>

        <!--end col-->
        @* ===== Attachments Section Starts Here ===== *@
        @if (Model.Attachments != null && Model.Attachments.Any())
        {
            <div class="card mb-4">
                <div class="card-header">
                    <strong>Attachments</strong>
                </div>
                <div class="card-body">
                    @foreach (var fileUrl in Model.Attachments)
                    {
                        var fileName = System.IO.Path.GetFileName(fileUrl);
                        var fileExt = System.IO.Path.GetExtension(fileUrl).ToLower();
                        var baseUrl = "https://localhost:7264/uploads/"; 
                        var encodedFileName = Uri.EscapeDataString(fileName);
                        var fullUrl = $"{baseUrl}{encodedFileName}";

                        var originalFileName = fileName.Contains("_") ? fileName.Split('_', 2)[1] : fileName;

                        string icon = fileExt switch
                        {
                            ".pdf" => "ri-file-pdf-line text-danger",
                            ".doc" or ".docx" => "ri-file-word-2-line text-primary",
                            ".ppt" or ".pptx" => "ri-file-ppt-2-line text-warning",
                            ".xls" or ".xlsx" => "ri-file-excel-2-line text-success",
                            ".zip" or ".rar" => "ri-file-zip-line text-secondary",
                            _ => "ri-attachment-line text-muted"
                        };

                        <div class="d-flex align-items-center border border-dashed p-2 rounded mt-2">
                            <div class="flex-shrink-0 avatar-sm">
                                <div class="avatar-title bg-light rounded">
                                    <i class="@icon fs-20"></i>
                                </div>
                            </div>
                            <div class="flex-grow-1 ms-3">
                                <h6 class="mb-1">
                                    <a href="@fullUrl" target="_blank">@originalFileName</a>
                                </h6>
                            </div>
                            <div class="hstack gap-3 fs-16">
                                <a href="@fullUrl" class="text-muted" download="@originalFileName">
                                    <i class="ri-download-2-line"></i>
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>
            }
        
        @* ===== Attachments Section Ends Here ===== *@
    }
    else
    {
        <div class="alert alert-warning text-center">
            No data available.
        </div>
    }

    <a asp-action="Index" asp-controller="Ticket" class="btn btn-secondary">Back to List</a>
</div>
